{"version":3,"sources":["icons.svg","img/Image_000.jpg","img/Image_001.jpg","img/Image_002.jpg","img/Image_003.jpg","img/Image_004.jpg","components/Header.js","cardData.js","components/GameCards.js","Main.js","serviceWorker.js","index.js"],"names":["module","exports","Header","useEffect","burger","document","querySelector","onclick","querySelectorAll","classList","toggle","toggleIcons","burgerNav","remove","className","to","xlinkHref","icons","href","image_000","image_001","image_002","image_003","image_004","GameCards","props","datos","src","image","alt","children","title","clase","descript","Main","window","scrollTo","x","elems","elem","countDownDate","Date","dataset","counter","getTime","distance","timer","now","hours","Math","floor","minutes","seconds","innerHTML","setInterval","clearInterval","getAllCountersDownTimer","loop","rewind","margin","nav","dots","autoplay","navText","responsive","0","items","580","1024","1360","cardData","id","data-counter","timeout","Boolean","location","hostname","match","App","basename","exact","path","component","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37209e57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons.223c41b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Image_000.23ca43a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Image_001.dbf1ae4b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Image_002.10d826eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Image_003.296106c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Image_004.538ef2ca.jpg\";","import React, { useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport icons from '../icons.svg';\r\n\r\nexport const Header = () => {\r\n    useEffect(() => {\r\n        let burger = document.querySelector('.header__burger')\r\n        const burgerNav = (burger) => {\r\n            const toggleIcons = () => {\r\n                for (let i of burger.querySelectorAll('i')) {\r\n                    i.classList.toggle('active')\r\n                }\r\n            }\r\n            burger.onclick = () => {\r\n                toggleIcons()\r\n            }\r\n        }\r\n        burgerNav(burger)\r\n        return () => {\r\n            for (let i of burger.querySelectorAll('i')) {\r\n                i.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n    return (\r\n        <header className=\"section sansBold\">\r\n            <nav className=\"grid header__nav\">\r\n                <ul className=\"flexcentbet header__links\">\r\n                    <li className=\"header__burger relative pointer\">\r\n                        <i></i>\r\n                        <i></i>\r\n                        <i></i>\r\n                    </li>\r\n                    <li><Link to=\"/\">Rooms</Link></li>\r\n                    <li><Link to=\"/\">Booking</Link></li>\r\n                    <li><Link to=\"/\">Contacts</Link></li>\r\n                </ul>\r\n                <Link to=\"/\" className=\"header__logo\">\r\n                    <svg>\r\n                        <use xlinkHref={`${icons}#logo`}></use>\r\n                    </svg>\r\n                </Link>\r\n                <ul className=\"flexcentbet header__cabinet\">\r\n                    <li><a href=\"tel:+436606050000\">+43 660 605 0000</a></li>\r\n                    <li className=\"relative pointer\">\r\n                        <svg className=\"header__bag\">\r\n                            <use xlinkHref={`${icons}#shopingbag`}></use>\r\n                        </svg>\r\n                        <svg className=\"header__shop\">\r\n                            <use xlinkHref={`${icons}#basket`}></use>\r\n                        </svg>\r\n                        <span className=\"header__count px12 red\">2</span>\r\n                    </li>\r\n                    <li className=\"flexcentbet header__lung\">\r\n                        <Link to=\"/\" className=\"active\">DE</Link>\r\n                        <Link to=\"/\">EN</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","\r\nimport image_000 from './img/Image_000.jpg'\r\nimport image_001 from './img/Image_001.jpg'\r\nimport image_002 from './img/Image_002.jpg'\r\nimport image_003 from './img/Image_003.jpg'\r\nimport image_004 from './img/Image_004.jpg'\r\n\r\nexport default [\r\n    {\r\n        // 0\r\n        'image': image_000,\r\n        'clase': '',\r\n        'title': 'Da Vinci',\r\n        'descript': 'Mystery',\r\n        'href': '/',\r\n        'timeout': '2020-07-16T21:00:00'\r\n    },\r\n    {\r\n        // 1\r\n        'image': image_001,\r\n        'clase': '',\r\n        'title': 'Mission Belvedere',\r\n        'descript': 'Action',\r\n        'href': '/',\r\n        'timeout': '2020-07-16T21:00:00'\r\n    },\r\n    {\r\n        // 2\r\n        'image': image_002,\r\n        'clase': '',\r\n        'title': 'School of magic',\r\n        'descript': 'Adventure',\r\n        'href': '/',\r\n        'timeout': '2020-07-16T24:00:00'\r\n    },\r\n    {\r\n        // 3\r\n        'image': image_003,\r\n        'clase': 'active',\r\n        'title': 'The Unknown',\r\n        'descript': 'Horror with live actor',\r\n        'href': '/',\r\n        'timeout': '2020-07-16T21:00:00'\r\n    },\r\n    {\r\n        // 4\r\n        'image': image_004,\r\n        'clase': 'active',\r\n        'title': 'The Nun',\r\n        'descript': 'Horror with live actor',\r\n        'href': '/',\r\n        'timeout': '2020-07-16T21:00:00'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const GameCards = (props) => {\r\n    return (\r\n        <Link to={props.datos.href} className=\"item flex card__vision pointer\">\r\n            <img src={props.datos.image} alt=\"banner\" />\r\n            {props.children}\r\n            <div className=\"card__title white\">\r\n                <h2 className=\"sansBold\">{props.datos.title}</h2>\r\n                <p className={'sansThin relative card__text ' + props.datos.clase}>{props.datos.descript}</p>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import React, { useEffect } from 'react';\nimport OwlCarousel from 'react-owl-carousel';\nimport { Header } from './components/Header';\nimport cardData from './cardData';\nimport { GameCards } from './components/GameCards';\n\nexport const Main = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n    let x = null\n    const getAllCountersDownTimer = (elems) => {\n      for (let elem of elems) {\n        let time = new Date(elem.dataset.counter),\n          countDownDate = time.getTime(),\n          distance = 0\n        const timer = () => {\n          let now = new Date().getTime()\n          distance = countDownDate - now\n          if (distance < 0) return\n          let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n            minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\n            seconds = Math.floor((distance % (1000 * 60)) / 1000)\n          if (hours < 10) hours = '0' + hours\n          if (minutes < 10) minutes = '0' + minutes\n          if (seconds < 10) seconds = '0' + seconds\n          elem.innerHTML = hours + ' : ' + minutes + ' : ' + seconds\n        }\n        timer()\n        x = setInterval(() => {\n          timer()\n          if (distance < 0) clearInterval(x)\n        }, 1000)\n      }\n    }\n    getAllCountersDownTimer(document.querySelectorAll('#counterStock'))\n    return () => {\n      clearInterval(x)\n    }\n  })\n  return (\n    <>\n      <Header />\n      <main>\n        <section className=\"section\">\n          <OwlCarousel className=\"owl-carousel owl-theme\" loop={true} rewind={true} margin={10} nav={true} dots={false} autoplay={true} navText={false}\n            responsive={{ 0: { items: 2 }, 580: { items: 3 }, 1024: { items: 4 }, 1360: { items: 5 } }}>\n            <GameCards datos={cardData[0]}>\n              <div className=\"flexcentaround card__discount white\">\n                <h2 className=\"morganiteBold\">20% off</h2>\n                <div>\n                  <h4 className=\"sansThin px14\">Limited-time Deal</h4>\n                  <p className=\"sansBlack px18\" id=\"counterStock\" data-counter={cardData[0].timeout}>00 : 00 : 00 : 00</p>\n                </div>\n              </div>\n            </GameCards>\n            <GameCards datos={cardData[1]} />\n            <GameCards datos={cardData[2]}>\n              <div className=\"flexcentaround card__discount white\">\n                <h2 className=\"morganiteBold\">20% off</h2>\n                <div>\n                  <h4 className=\"sansThin px14\">Limited-time Deal</h4>\n                  <p className=\"sansBlack px18\" id=\"counterStock\" data-counter={cardData[2].timeout}>00 : 00 : 00 : 00</p>\n                </div>\n              </div>\n            </GameCards>\n            <GameCards datos={cardData[3]} />\n            <GameCards datos={cardData[4]} />\n            <GameCards datos={cardData[0]} />\n            <GameCards datos={cardData[1]} />\n            <GameCards datos={cardData[2]} />\n            <GameCards datos={cardData[3]} />\n            <GameCards datos={cardData[4]} />\n          </OwlCarousel>\n        </section>\n      </main>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport './normalize.css';\nimport './index.css';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport { Main } from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nexport const App = () => {\n  return (\n    <HashRouter basename='/'>\n        <Route exact path=\"/\" component={Main} />\n    </HashRouter>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}